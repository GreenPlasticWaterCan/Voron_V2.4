

[gcode_macro _HOME_X]
gcode = 
	
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
	{% set HOME_CURRENT = 0.60%}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
	
	SET_KINEMATIC_POSITION X=15
	G91
	G1 X-15 F1200
	
	G4 P2000
	G28 X
	
	
	G91
	G1 X-15 F1200
	
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode = 
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
	{% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
	{% set HOME_CURRENT =0.60%}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
	
	SET_KINEMATIC_POSITION Y=15
	G91
	G1 Y-15 F1200
	G4 P2000
	
	G28 Y
	
	G91
	G1 Y-15 F1200
	
	
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro M701]
description = Map M701 to LOAD_FILAMENT
gcode = 
	LOAD_FILAMENT

[gcode_macro M702]
description = Map M702 to UNLOAD_FILAMENT
gcode = 
	UNLOAD_FILAMENT

[gcode_macro M600]
description = Map M600 to CHANGE_FILAMENT
gcode = 
	CHANGE_FILAMENT

[gcode_macro M125]
description = Map M125 to PARK
gcode = 
	PARK

[gcode_macro M900]
description = Map M900 to SET_PRESSURE_ADVANCE
gcode = 
	{% if 'K' in params %}
	{% if 'E' in params %}
	SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
	{% else %}
	SET_PRESSURE_ADVANCE ADVANCE={params.K}
	{% endif %}
	{% endif %}

[gcode_macro M204]
description = Map M204 to SET_VELOCITY_LIMIT for ACCEL
rename_existing = M204.1
gcode = 
	{% if 'S' in params %}
	{% set S = params.S|float %}
	SET_VELOCITY_LIMIT ACCEL={S}
	{% endif %}

[gcode_macro M205]
description = Map M205 to SET_VELOCITY_LIMIT for SQUARE_CORNER_VELOCITY
gcode = 
	{% if 'X' in params %}
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
	{% elif 'Y' in params %}
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
	{% endif %}

[gcode_macro G00]
gcode = 
	G0 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

[gcode_macro G01]
gcode = 
	G1 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

[gcode_macro G02]
gcode = 
	G2 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

[gcode_macro G03]
gcode = 
	G2 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

[gcode_macro G04]
gcode = 
	G4 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}

    [gcode_macro START_FILTER]
gcode = 
	{% set SPEED = params.SPEED|default(1)|float %}
	
	{% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}
	SET_FAN_SPEED FAN={filter_name} SPEED={SPEED}

[gcode_macro STOP_FILTER]
gcode = 
	{% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}
	SET_FAN_SPEED FAN={filter_name} SPEED=0

[delayed_gcode _STOP_FILTER_DELAYED]
gcode = 
	STOP_FILTER

    # Quand gantry leveling definition
# If this files is included, then it also activate the QGL
# automatically in the START_PRINT macro
[gcode_macro _USER_VARIABLES]
variable_qgl_enabled: True
gcode:

# Also include directly the dockable probe overide of qgl from here
[include macros/base/probing/overrides/qgl.cfg]
[include macros/base/homing/tilting.cfg]


[quad_gantry_level]
gantry_corners:
    -60,-10
    410,420
points:
    50,25
    50,275
    300,275
    300,25
speed: 350
horizontal_move_z: 12
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

# If this files is included, then it also activate the bed_mesh
# automatically in the START_PRINT macro
[gcode_macro _USER_VARIABLES]
variable_bed_mesh_enabled: True
gcode:

# Also include directly the dockable probe overide of BED_MESH_CALIBRATE from here
[include macros/base/probing/overrides/bed_mesh_calibrate.cfg]
# And also include the adaptive mesh macro at the same time
[include macros/calibration/adaptive_bed_mesh.cfg]

[gcode_macro _MODULE_CUSTOM1]
gcode:
  CARTOGRAPHER_TOUCH

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[bed_mesh]
speed: 350
horizontal_move_z: 20
mesh_min: 25, 25
mesh_max: 325, 325
probe_count: 9, 9
fade_start: 0.6
fade_end: 10.0
algorithm: bicubic
zero_reference_position: 175, 175

[gcode_macro TAP_DATA]
gcode:
    G28
    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    G1 Z-0.5 F120
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    G28
    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv
    G1 Z-0.5 F200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv
            